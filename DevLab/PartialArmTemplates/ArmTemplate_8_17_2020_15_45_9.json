{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DevLab"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LoadSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetSalesFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Sales_ds",
								"type": "DatasetReference"
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetSalesFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetSalesFiles').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(and(startswith(item().name,'sales'),endswith(item().name,'.csv')),equals(item().type,'File'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachSalesFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.Value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "InsertSales",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "InsertSales",
											"type": "DataFlowReference",
											"parameters": {
												"Filename": {
													"value": "'@{item().name}'",
													"type": "Expression"
												}
											}
										},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										}
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Sales_ds')]",
				"[concat(variables('factoryId'), '/dataflows/InsertSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesFiles_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_products",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "products1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "s_id",
						"type": "String"
					},
					{
						"name": "p_id",
						"type": "String"
					},
					{
						"name": "c_id",
						"type": "String"
					},
					{
						"name": "no_of_units",
						"type": "String"
					},
					{
						"name": "date_purchased",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesTab')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzSQLDBdevLab",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "p_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "c_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "no_of_units",
						"type": "int",
						"precision": 10
					},
					{
						"name": "date_purchased",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sales_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "sales"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sales_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_products",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "products1"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "s_id",
						"type": "String"
					},
					{
						"name": "p_id",
						"type": "String"
					},
					{
						"name": "c_id",
						"type": "String"
					},
					{
						"name": "no_of_units",
						"type": "String"
					},
					{
						"name": "date_purchased",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InsertSales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SalesFiles_ds",
								"type": "DatasetReference"
							},
							"name": "SalesFile"
						},
						{
							"dataset": {
								"referenceName": "SalesTab",
								"type": "DatasetReference"
							},
							"name": "MaxSalesId"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SalesTab",
								"type": "DatasetReference"
							},
							"name": "SaveToSalesTable"
						}
					],
					"transformations": [
						{
							"name": "GetMaxSalesId"
						},
						{
							"name": "JoinWithMaxId"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "parameters{\n\tFilename as string ('sales_2019.csv')\n}\nsource(output(\n\t\tp_id as short,\n\t\tc_id as short,\n\t\tno_of_units as short,\n\t\tdate_purchased as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\twildcardPaths:[($Filename)]) ~> SalesFile\nsource(output(\n\t\tmaxId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select max(sales_id) as maxId from SalesLT.sales',\n\tformat: 'query') ~> MaxSalesId\nMaxSalesId derive(maxId = iif(isNull(maxId),0,maxId)) ~> GetMaxSalesId\nSalesFile, GetMaxSalesId join(true(),\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> JoinWithMaxId\nJoinWithMaxId keyGenerate(output(surrogate_id as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 derive(sales_id = maxId + surrogate_id) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tp_id as integer,\n\t\tc_id as integer,\n\t\tno_of_units as integer,\n\t\tdate_purchased as timestamp,\n\t\tsales_id as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tp_id,\n\t\tc_id,\n\t\tno_of_units,\n\t\tdate_purchased,\n\t\tsales_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SaveToSalesTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SalesFiles_ds')]",
				"[concat(variables('factoryId'), '/datasets/SalesTab')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadProducts')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "products_ds",
								"type": "DatasetReference"
							},
							"name": "ProductCSV"
						},
						{
							"dataset": {
								"referenceName": "Products_tab",
								"type": "DatasetReference"
							},
							"name": "SelectProdIdentifier"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Products_tab",
								"type": "DatasetReference"
							},
							"name": "LoadProductsTab"
						}
					],
					"transformations": [
						{
							"name": "GetProdIdentifier"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tprod_identifier as integer,\n\t\tp_name as string,\n\t\tp_colour as string,\n\t\tp_price as decimal(10,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> ProductCSV\nsource(output(\n\t\tprod_identifier as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select prod_identifier from [SalesLT].[products]',\n\tformat: 'query') ~> SelectProdIdentifier\nProductCSV, SelectProdIdentifier join(ProductCSV@prod_identifier == SelectProdIdentifier@prod_identifier,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> GetProdIdentifier\nGetProdIdentifier alterRow(upsertIf(ProductCSV@prod_identifier==SelectProdIdentifier@prod_identifier)) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tprod_identifier as integer,\n\t\tp_name as string,\n\t\tp_colour as string,\n\t\tp_price as decimal(18,0)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['prod_identifier'],\n\tskipKeyWrites:true,\n\tformat: 'table',\n\tpostSQLs:['commit'],\n\tmapColumn(\n\t\tprod_identifier = ProductCSV@prod_identifier,\n\t\tp_name,\n\t\tp_colour,\n\t\tp_price\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> LoadProductsTab"
				}
			},
			"dependsOn": []
		}
	]
}