{
	"name": "Data Ingestion to Stg",
	"properties": {
		"activities": [
			{
				"name": "Get Region Config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select directory_name, file_name, file_type, full_load from SalesLT.SalesIngestion where region_name = @{pipeline().parameters.Region}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "CustomerStg",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Match Files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Region Config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Region Config').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get File Location",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_region_dir",
									"type": "DatasetReference",
									"parameters": {
										"directory_name": {
											"value": "@item().directory_name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists",
									"childItems"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "Filter Files",
							"type": "Filter",
							"dependsOn": [
								{
									"activity": "Get File Location",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "File Name",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "File Type",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Get File Location').output.childItems",
									"type": "Expression"
								},
								"condition": {
									"value": "@and(startswith(item().name,variables('File Name')),endswith(item().name,variables('File Type')))",
									"type": "Expression"
								}
							}
						},
						{
							"name": "File Name",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "File Name",
								"value": {
									"value": "@item().file_name",
									"type": "Expression"
								}
							}
						},
						{
							"name": "File Type",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "File Type",
								"value": {
									"value": "@item().file_type",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Region": {
				"type": "string"
			}
		},
		"variables": {
			"dir_name": {
				"type": "String"
			},
			"region_name": {
				"type": "String"
			},
			"File Name": {
				"type": "String"
			},
			"File Type": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2020-08-12T09:52:03Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}